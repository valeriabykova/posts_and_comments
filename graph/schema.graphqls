type Post {
  id: ID!
  title: String!
  body: String!
  allowComments: Boolean!
  author: String!
  comments(first: Int, after: String): CommentsConnection!
}

type Comment {
  id: ID!
  postId: Int!
  parentId: Int
  body: String!
  author: String!
  replies(first: Int, after: String): CommentsConnection!
}

type CommentsConnection {
  edges: [CommentsEdge!]!
  pageInfo: PageInfo!
}

type CommentsEdge {
  cursor: ID!
  node: Comment
}

type PageInfo {
  endCursor: ID!
  hasNextPage: Boolean
}

input NewPost {
  title: String!
  body: String!
  author: String!
  allowComments: Boolean!
}

input NewComment {
  body: String!
  author: String!
  postId: Int!
  parentId: Int
}

type Mutation {
  createPost(post: NewPost): Post
  createComment(comment: NewComment): Comment
}

type Query {
  post(id: ID!): Post!
  comment(id: ID!): Comment!
  posts(page: Int, limit: Int!): [Post!]!
}
